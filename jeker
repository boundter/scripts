#!/usr/bin/env python3
import argparse
import os
import subprocess
import signal

parser = argparse.ArgumentParser(description='Start a jekyll-container')
parser.add_argument(
    '-i', action='store_true', help='Set as interactive')
parser.add_argument(
    '-t', action='store_true', help='Set as terminal')
parser.add_argument(
    '-v', type=str, default=os.getenv('PWD'),
    help='Set directory to be linked')
parser.add_argument(
    '-e', type=str, action='append', default=None,
    help='Set environment variables')
parser.add_argument(
    '-p', type=str, default='4000',
    help='Map given port on host to port 4000 in container')
parser.add_argument(
    'command', nargs='*', help='Execute this command')
args = parser.parse_args()


container = 'boundter/github-pages:latest'
command = [
    'docker', 'run', '--rm', '-v', args.v+':/srv/jekyll', '-p',
    args.p+':4000']

if args.i:
    command.append('-i')
if args.t:
    command.append('-t')
if args.e:
    for environment in args.e:
        command.append('-e')
        command.append(environment)

command.append(container)
if args.command:
    for c in args.command:
        command.append(c)


print("Execute " + " ".join(command))

def sigint_handler(signal, frame):
    return

signal.signal(signal.SIGINT, sigint_handler)

pro = subprocess.run(command)
